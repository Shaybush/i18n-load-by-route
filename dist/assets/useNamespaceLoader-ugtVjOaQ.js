import{r as c,I as A,g as P,R as k,c as F,l as _}from"./index-CBtxA5zd.js";const j=(e,n,t,s)=>{const r=[t,{code:n,...s||{}}];if(e?.services?.logger?.forward)return e.services.logger.forward(r,"warn","react-i18next::",!0);N(r[0])&&(r[0]=`react-i18next:: ${r[0]}`),e?.services?.logger?.warn?e.services.logger.warn(...r):console?.warn&&console.warn(...r)},L={},C=(e,n,t,s)=>{N(t)&&L[t]||(N(t)&&(L[t]=new Date),j(e,n,t,s))},O=(e,n)=>()=>{if(e.isInitialized)n();else{const t=()=>{setTimeout(()=>{e.off("initialized",t)},0),n()};e.on("initialized",t)}},E=(e,n,t)=>{e.loadNamespaces(n,O(e,t))},R=(e,n,t,s)=>{if(N(t)&&(t=[t]),e.options.preload&&e.options.preload.indexOf(n)>-1)return E(e,t,s);t.forEach(r=>{e.options.ns.indexOf(r)<0&&e.options.ns.push(r)}),e.loadLanguages(n,O(e,s))},G=(e,n,t={})=>!n.languages||!n.languages.length?(C(n,"NO_LANGUAGES","i18n.languages were undefined or empty",{languages:n.languages}),!0):n.hasLoadedNamespace(e,{lng:t.lng,precheck:(s,r)=>{if(t.bindI18n&&t.bindI18n.indexOf("languageChanging")>-1&&s.services.backendConnector.backend&&s.isLanguageChangingTo&&!r(s.isLanguageChangingTo,e))return!1}}),N=e=>typeof e=="string",M=e=>typeof e=="object"&&e!==null,$=(e,n)=>{const t=c.useRef();return c.useEffect(()=>{t.current=e},[e,n]),t.current},v=(e,n,t,s)=>e.getFixedT(n,t,s),U=(e,n,t,s)=>c.useCallback(v(e,n,t,s),[e,n,t,s]),J=(e,n={})=>{const{i18n:t}=n,{i18n:s,defaultNS:r}=c.useContext(A)||{},a=t||s||P();if(a&&!a.reportNamespaces&&(a.reportNamespaces=new k),!a){C(a,"NO_I18NEXT_INSTANCE","useTranslation: You will need to pass in an i18next instance by using initReactI18next");const i=(l,f)=>N(f)?f:M(f)&&N(f.defaultValue)?f.defaultValue:Array.isArray(l)?l[l.length-1]:l,u=[i,{},!1];return u.t=i,u.i18n={},u.ready=!1,u}a.options.react?.wait&&C(a,"DEPRECATED_OPTION","useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");const m={...F(),...a.options.react,...n},{useSuspense:x,keyPrefix:T}=m;let o=e||r||a.options?.defaultNS;o=N(o)?[o]:o||["translation"],a.reportNamespaces.addUsedNamespaces?.(o);const g=(a.isInitialized||a.initializedStoreOnce)&&o.every(i=>G(i,a,m)),z=U(a,n.lng||null,m.nsMode==="fallback"?o:o[0],T),b=()=>z,y=()=>v(a,n.lng||null,m.nsMode==="fallback"?o:o[0],T),[S,w]=c.useState(b);let h=o.join();n.lng&&(h=`${n.lng}${h}`);const I=$(h),d=c.useRef(!0);c.useEffect(()=>{const{bindI18n:i,bindI18nStore:u}=m;d.current=!0,!g&&!x&&(n.lng?R(a,n.lng,o,()=>{d.current&&w(y)}):E(a,o,()=>{d.current&&w(y)})),g&&I&&I!==h&&d.current&&w(y);const l=()=>{d.current&&w(y)};return i&&a?.on(i,l),u&&a?.store.on(u,l),()=>{d.current=!1,a&&i&&i?.split(" ").forEach(f=>a.off(f,l)),u&&a&&u.split(" ").forEach(f=>a.store.off(f,l))}},[a,h]),c.useEffect(()=>{d.current&&g&&w(b)},[a,T,g]);const p=[S,a,g];if(p.t=S,p.i18n=a,p.ready=g,g||!g&&!x)return p;throw new Promise(i=>{n.lng?R(a,n.lng,o,()=>i()):E(a,o,()=>i())})},X=(e,n)=>{const{i18n:t}=J(),s=c.useCallback(()=>{_(e,n)},[e,n]);return c.useEffect(()=>{s()},[s]),c.useEffect(()=>{const r=()=>{s()};return t.on("languageChanged",r),()=>{t.off("languageChanged",r)}},[t,s]),{currentLanguage:t.language,reloadNamespace:s}};export{J as a,X as u};
